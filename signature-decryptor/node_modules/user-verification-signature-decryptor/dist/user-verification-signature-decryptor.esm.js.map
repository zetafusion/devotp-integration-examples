{"version":3,"file":"user-verification-signature-decryptor.esm.js","sources":["../src/index.ts"],"sourcesContent":["import * as crypto from 'node:crypto';\n\nexport interface DecryptedPayload {\n  identifier: string;\n  createdAt: string;\n}\n\nexport interface ValidationResult {\n  isValid: boolean;\n  decryptedData?: DecryptedPayload;\n}\n\nexport class PayloadDecryptor {\n  private readonly clientKey: Buffer;\n\n  constructor(clientKey: string) {\n    this.clientKey = Buffer.from(clientKey, 'hex');\n  }\n\n  private decryptPayload(encryptedData: string): DecryptedPayload {\n    // Split the IV and encrypted data\n    const [ivHex, encryptedPayload] = encryptedData.split(':');\n\n    if (!ivHex || !encryptedPayload) {\n      throw new Error('Invalid encrypted data format');\n    }\n\n    // Convert IV back to Buffer\n    const iv = Buffer.from(ivHex, 'hex');\n\n    try {\n      // Create decipher\n      const decipher = crypto.createDecipheriv(\n        'aes-256-cbc',\n        this.clientKey,\n        iv\n      );\n\n      // Decrypt the payload\n      let decrypted = decipher.update(encryptedPayload, 'hex', 'utf8');\n      decrypted += decipher.final('utf8');\n\n      // Parse the JSON string back to an object\n      return JSON.parse(decrypted);\n    } catch (error) {\n      throw new Error('Failed to decrypt payload: ' + (error as Error).message);\n    }\n  }\n\n  public async validateDecryption(\n    email: string,\n    signature: string\n  ): Promise<ValidationResult> {\n    try {\n      // Decrypt the signature\n      const decryptedData = this.decryptPayload(signature);\n\n      // Verify that the decrypted identifier matches the provided email\n      if (decryptedData.identifier !== email) {\n        console.warn('Email mismatch:', {\n          decryptedIdentifier: decryptedData.identifier,\n          providedEmail: email,\n        });\n        return { isValid: false };\n      }\n\n      return { isValid: true, decryptedData };\n    } catch (error) {\n      console.error('Validation error:', error);\n      return { isValid: false };\n    }\n  }\n}\n"],"names":["PayloadDecryptor","clientKey","Buffer","from","_proto","prototype","decryptPayload","encryptedData","_encryptedData$split","split","ivHex","encryptedPayload","Error","iv","decipher","crypto","decrypted","update","JSON","parse","error","message","validateDecryption","_validateDecryption","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","signature","decryptedData","wrap","_callee$","_context","prev","next","identifier","console","warn","decryptedIdentifier","providedEmail","abrupt","isValid","t0","stop","_x","_x2","apply","arguments"],"mappings":"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"}